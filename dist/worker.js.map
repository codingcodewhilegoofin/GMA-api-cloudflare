{"version":3,"file":"worker.js","sources":["webpack:///webpack/bootstrap","webpack:///./node_modules/itty-router/dist/itty-router.min.js","webpack:///./src/handlers/Arduino/codeLedSTATUS.js","webpack:///./src/handlers/Arduino/codeLedToggleOFF.js","webpack:///./src/handlers/Arduino/codeLedToggleON.js","webpack:///./src/handlers/Financial/cryptoTicker.js","webpack:///./src/handlers/Financial/gov.js","webpack:///./src/handlers/Financial/nft.js","webpack:///./src/handlers/Financial/stock.js","webpack:///./src/handlers/OpenAi/apitest.js","webpack:///./src/handlers/Spotify/artist.js","webpack:///./src/handlers/Spotify/artists.js","webpack:///./src/handlers/test.js","webpack:///./src/handlers/tests.js","webpack:///./src/html/about.html","webpack:///./src/html/contact.html","webpack:///./src/html/endpoints.html","webpack:///./src/html/index.html","webpack:///./src/index.js"],"sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/index.js\");\n","module.exports={Router:function({base:t=\"\",routes:n=[]}={}){return{__proto__:new Proxy({},{get:(e,a,o)=>(e,...r)=>n.push([a.toUpperCase(),RegExp(`^${(t+e).replace(/(\\/?)\\*/g,\"($1.*)?\").replace(/(\\/$)|((?<=\\/)\\/)/,\"\").replace(/:(\\w+)(\\?)?(\\.)?/g,\"$2(?<$1>[^/]+)$2$3\").replace(/\\.(?=[\\w(])/,\"\\\\.\").replace(/\\)\\.\\?\\(([^\\[]+)\\[\\^/g,\"?)\\\\.?($1(?<=\\\\.)[^\\\\.\")}/*$`),r])&&o}),routes:n,async handle(e,...r){let a,o,t=new URL(e.url);e.query=Object.fromEntries(t.searchParams);for(var[p,s,u]of n)if((p===e.method||\"ALL\"===p)&&(o=t.pathname.match(s))){e.params=o.groups;for(var c of u)if(void 0!==(a=await c(e.proxy||e,...r)))return a}}}}};\n","//Arduino Url\r\nconst ArduinoUrl = 'https://api2.arduino.cc/iot/v1/clients/token';\r\nconst thingsURL = \"https://api2.arduino.cc/iot/v2/things?show_properties=true\";\r\nconst propertiesPublishUrl = \"https://api2.arduino.cc/iot/v2/things\";\r\n\r\nconst CodeLedSTATUS = async (request, event) => {\r\n\r\n    try {\r\n\r\n        // Turn on LED on website and board \r\n        async function getToken() {\r\n            let options = {\r\n                method: 'POST',\r\n                body: 'grant_type=client_credentials&client_id=' + ARDUINO_CLIENT_ID + '&client_secret=' + ARDUINO_SECRET_TOKEN + '&audience=' + 'https://api2.arduino.cc/iot',\r\n                headers: { 'content-type': 'application/x-www-form-urlencoded' },\r\n            };\r\n\r\n            try {\r\n                const response = await fetch(ArduinoUrl, options);\r\n\r\n                console.log(response.status);\r\n\r\n                if (!response.ok) {\r\n                    const message = `Bad response: ${response.status}`;\r\n                    throw new Error(message);\r\n                }\r\n                else {\r\n\r\n                    const tokenPackage = await response.json();\r\n                    const token = (tokenPackage['access_token']);\r\n\r\n                    return token;\r\n                }\r\n            }\r\n            catch (error) {\r\n                console.error(\"Failed getting an Arduino access token: \" + error);\r\n            }\r\n        }\r\n\r\n        async function useToken() {\r\n            try {\r\n\r\n                const token = await getToken();\r\n\r\n                let options2 = {\r\n                    method: 'GET',\r\n                    headers: {\r\n                        'Authorization': `Bearer ${token}`,\r\n                        'Content-Type': 'application/json'\r\n                    }\r\n                };\r\n\r\n                try {\r\n\r\n                    const arduinoResponse = await fetch(thingsURL, options2);\r\n\r\n                    if (!arduinoResponse.ok) {\r\n                        const message = `\\n An error has occured: ${arduinoResponse.status}`;\r\n\r\n                        throw new Error(message);\r\n                    }\r\n                    else {\r\n\r\n                        const arduinoData = await arduinoResponse.json();\r\n\r\n                        return { arduinoData, arduinoResponse };\r\n                    }\r\n                }\r\n                catch (error) {\r\n                    console.error(\"\\n Failed GET things request: \", error);\r\n                }\r\n\r\n            } catch (error) {\r\n                console.log(\"useToken() error occurred: \", error);\r\n            }\r\n        }\r\n\r\n        const { arduinoData, arduinoResponse } = await useToken();\r\n\r\n        return new Response(JSON.stringify({\r\n            value: `${arduinoData[0].properties[1].last_value}`,\r\n            name: `${arduinoData[0].properties[1].name}`,\r\n            status: `${arduinoResponse.status}`,\r\n        }\r\n        ), {\r\n            headers:\r\n            {\r\n                'Content-Type': 'application/json',\r\n                'Access-Control-Allow-Origin': '*',\r\n                'Access-Control-Allow-Methods': 'GET,HEAD,POST,OPTIONS',\r\n                'Access-Control-Max-Age': '86400',\r\n            }\r\n        });\r\n    }\r\n    catch (error) {\r\n        console.error(\"Failed CodeLedToggleSTATUS function call : \" + error);\r\n        //res.status(401).send(\"Could not find ticker symbol or other issue\");\r\n    }\r\n};\r\nexport default CodeLedSTATUS;","//Arduino Url\r\nconst ArduinoUrl = 'https://api2.arduino.cc/iot/v1/clients/token';\r\nconst thingsURL = \"https://api2.arduino.cc/iot/v2/things?show_properties=true\";\r\nconst propertiesPublishUrl = \"https://api2.arduino.cc/iot/v2/things\";\r\n\r\nconst CodeLedToggleOFF = async (request, event) => {\r\n\r\n    try {\r\n\r\n        // Turn on LED on website and board \r\n        async function getToken() {\r\n            let options = {\r\n                method: 'POST',\r\n                body: 'grant_type=client_credentials&client_id=' + ARDUINO_CLIENT_ID + '&client_secret=' + ARDUINO_SECRET_TOKEN + '&audience=' + 'https://api2.arduino.cc/iot',\r\n                headers: { 'content-type': 'application/x-www-form-urlencoded' },\r\n            };\r\n\r\n            try {\r\n                const response = await fetch(ArduinoUrl, options);\r\n\r\n                console.log(response.status);\r\n\r\n                if (!response.ok) {\r\n                    const message = `Bad response: ${response.status}`;\r\n                    throw new Error(message);\r\n                }\r\n                else {\r\n\r\n                    const tokenPackage = await response.json();\r\n                    const token = (tokenPackage['access_token']);\r\n\r\n                    return token;\r\n                }\r\n            }\r\n            catch (error) {\r\n                console.error(\"Failed getting an Arduino access token: \" + error);\r\n            }\r\n        }\r\n\r\n        async function useToken() {\r\n            try {\r\n\r\n                const token = await getToken();\r\n\r\n                let options2 = {\r\n                    method: 'GET',\r\n                    headers: {\r\n                        'Authorization': `Bearer ${token}`,\r\n                        'Content-Type': 'application/json'\r\n                    }\r\n                };\r\n\r\n                try {\r\n\r\n                    const response = await fetch(thingsURL, options2);\r\n\r\n                    if (!response.ok) {\r\n                        const message = `\\n An error has occured: ${response.status}`;\r\n\r\n                        throw new Error(message);\r\n                    }\r\n                    else {\r\n\r\n                        const data = await response.json();\r\n\r\n                        try {\r\n\r\n                            let options3 = {\r\n                                method: 'PUT',\r\n                                headers: {\r\n                                    'Authorization': `Bearer ${token}`,\r\n                                    'Content-Type': 'application/json'\r\n                                },\r\n                                body: JSON.stringify({\r\n\r\n                                    'value': false,\r\n                                })\r\n                            };\r\n\r\n                            const urlTemp = `${propertiesPublishUrl}/${data[0].id}/properties/${data[0].properties[1].id}/publish`;\r\n                            const response = await fetch(urlTemp, options3);\r\n\r\n                            if (!response.ok) {\r\n                                const message = `\\n Bad response PUT : ${response.status}`;\r\n                                throw new Error(message);\r\n                            }\r\n\r\n                            return response;\r\n\r\n                        }\r\n                        catch (error) {\r\n                            console.error(\"\\n Failed POST properties update request: \", error);\r\n                        }\r\n                    }\r\n                }\r\n                catch (error) {\r\n                    console.error(\"\\n Failed GET things request: \", error);\r\n                }\r\n\r\n            } catch (error) {\r\n                console.log(\"useToken() error occurred: \", error);\r\n            }\r\n        }\r\n\r\n        const arduinoResponse = await useToken();\r\n\r\n        return new Response(JSON.stringify(\"LED_OFF \" + arduinoResponse.status), {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Access-Control-Allow-Origin': '*',\r\n                'Access-Control-Allow-Methods': 'GET,HEAD,POST,OPTIONS',\r\n                'Access-Control-Max-Age': '86400',\r\n            }\r\n        });\r\n    }\r\n    catch (error) {\r\n        console.error(\"Failed CodeLedToggleOFF function call : \" + error);\r\n        //res.status(401).send(\"Could not find ticker symbol or other issue\");\r\n    }\r\n};\r\nexport default CodeLedToggleOFF;","//Arduino Url\r\nconst ArduinoUrl = 'https://api2.arduino.cc/iot/v1/clients/token';\r\nconst thingsURL = \"https://api2.arduino.cc/iot/v2/things?show_properties=true\";\r\nconst propertiesPublishUrl = \"https://api2.arduino.cc/iot/v2/things\";\r\n\r\nconst CodeLedToggleON = async (request, event) => {\r\n\r\n    try {\r\n\r\n        // Turn on LED on website and board \r\n        async function getToken() {\r\n            let options = {\r\n                method: 'POST',\r\n                body: 'grant_type=client_credentials&client_id=' + ARDUINO_CLIENT_ID + '&client_secret=' + ARDUINO_SECRET_TOKEN + '&audience=' + 'https://api2.arduino.cc/iot',\r\n                headers: { 'content-type': 'application/x-www-form-urlencoded' },\r\n            };\r\n\r\n            try {\r\n                const response = await fetch(ArduinoUrl, options);\r\n\r\n                console.log(response.status);\r\n\r\n                if (!response.ok) {\r\n                    const message = `Bad response: ${response.status}`;\r\n                    throw new Error(message);\r\n                }\r\n                else {\r\n\r\n                    const tokenPackage = await response.json();\r\n                    const token = (tokenPackage['access_token']);\r\n\r\n                    return token;\r\n                }\r\n            }\r\n            catch (error) {\r\n                console.error(\"Failed getting an Arduino access token: \" + error);\r\n            }\r\n        }\r\n\r\n        async function useToken() {\r\n            try {\r\n\r\n                const token = await getToken();\r\n\r\n                let options2 = {\r\n                    method: 'GET',\r\n                    headers: {\r\n                        'Authorization': `Bearer ${token}`,\r\n                        'Content-Type': 'application/json'\r\n                    }\r\n                };\r\n\r\n                try {\r\n\r\n                    const response = await fetch(thingsURL, options2);\r\n\r\n                    if (!response.ok) {\r\n                        const message = `\\n An error has occured: ${response.status}`;\r\n\r\n                        throw new Error(message);\r\n                    }\r\n                    else {\r\n\r\n                        const data = await response.json();\r\n\r\n                        try {\r\n\r\n                            let options3 = {\r\n                                method: 'PUT',\r\n                                headers: {\r\n                                    'Authorization': `Bearer ${token}`,\r\n                                    'Content-Type': 'application/json'\r\n                                },\r\n                                body: JSON.stringify({\r\n\r\n                                    'value': true,\r\n                                })\r\n                            };\r\n\r\n                            const urlTemp = `${propertiesPublishUrl}/${data[0].id}/properties/${data[0].properties[1].id}/publish`;\r\n                            const response = await fetch(urlTemp, options3);\r\n\r\n                            if (!response.ok) {\r\n                                const message = `\\n Bad response PUT : ${response.status}`;\r\n                                throw new Error(message);\r\n                            }\r\n\r\n                            return response;\r\n\r\n                        }\r\n                        catch (error) {\r\n                            console.error(\"\\n Failed POST properties update request: \", error);\r\n                        }\r\n                    }\r\n                }\r\n                catch (error) {\r\n                    console.error(\"\\n Failed GET things request: \", error);\r\n                }\r\n\r\n            } catch (error) {\r\n                console.log(\"useToken() error occurred: \", error);\r\n            }\r\n        }\r\n\r\n        const arduinoResponse = await useToken();\r\n\r\n        return new Response(JSON.stringify(\"LED_ON \" + arduinoResponse.status), {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Access-Control-Allow-Origin': '*',\r\n                'Access-Control-Allow-Methods': 'GET,HEAD,POST,OPTIONS',\r\n                'Access-Control-Max-Age': '86400',\r\n            }\r\n        });\r\n    }\r\n    catch (error) {\r\n        console.error(\"Failed CodeLedToggleON function call : \" + error);\r\n        //res.status(401).send(\"Could not find ticker symbol or other issue\");\r\n    }\r\n};\r\nexport default CodeLedToggleON;","//PolygonAPI URL\r\nconst polygonUrlBaseCrypto = 'https://api.polygon.io/v2/aggs/ticker/';\r\nlet cryptoTicker = 'X:BTCUSD';\r\nlet adjusted = 'true';\r\n\r\nconst CryptoTicker = async (request, event) => {\r\n\r\n    if (request.params.cryptoTicker) {\r\n        cryptoTicker = request.params.cryptoTicker;\r\n    } else {\r\n        cryptoTicker = 'X:BTCUSD';\r\n    }\r\n\r\n    if (request.params.adjusted) {\r\n        adjusted = request.params.adjusted;\r\n    } else {\r\n        adjusted = 'true';\r\n    }\r\n\r\n\r\n    try {\r\n        const response = await fetch( ( polygonUrlBaseCrypto + `${cryptoTicker}/` + `prev?adjusted=${adjusted}`+ `&apiKey=${POLYGON_API_KEY}` ) );\r\n\r\n        if (!response.ok) {\r\n            const message = `Bad response: ${response.status}`;\r\n            res.status(401).send(\"Could not find ticker symbol or other issue\");\r\n            throw new Error(message);\r\n        }\r\n        else {\r\n\r\n            const data = await response.json();\r\n\r\n            return new Response(JSON.stringify(data), {\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Access-Control-Allow-Origin': '*',\r\n                    'Access-Control-Allow-Methods': 'GET,HEAD,POST,OPTIONS',\r\n                    'Access-Control-Max-Age': '86400',\r\n                }\r\n            });\r\n        }\r\n    }\r\n    catch (error) {\r\n        console.error(\"Failed GET for Crypto data: \" + error);\r\n        //res.status(401).send(\"Could not find ticker symbol or other issue\");\r\n    }\r\n};\r\nexport default CryptoTicker;","\r\nconst GovData = async (request, event) => {\r\n\r\n    try {\r\n        const response = await fetch('https://api.fiscaldata.treasury.gov/services/api/fiscal_service/v2/accounting/od/debt_outstanding?sort=-record_date');\r\n\r\n        if (!response.ok) {\r\n            const message = `Bad response: ${response.status}`;\r\n            res.status(401).send(\"Could not find ticker symbol or other issue\");\r\n            throw new Error(message);\r\n        }\r\n        else {\r\n\r\n            const data = await response.json();\r\n\r\n            return new Response(JSON.stringify(data), {\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Access-Control-Allow-Origin': '*',\r\n                    'Access-Control-Allow-Methods': 'GET,HEAD,POST,OPTIONS',\r\n                    'Access-Control-Max-Age': '86400',\r\n                }\r\n            });\r\n        }\r\n    }\r\n    catch (error) {\r\n        console.error(\"Failed GET for Polygon data: \" + error);\r\n        //res.status(401).send(\"Could not find ticker symbol or other issue\");\r\n    }\r\n};\r\nexport default GovData;","//PolygonAPI URL\r\nconst openseaUrlBase = 'https://api.opensea.io/api/v1/collection/';\r\nlet collectionName = 'cryptopunks';\r\nlet date = '2022-08-03';\r\nlet adjusted = 'true';\r\n\r\nconst NftTicker = async (request, event) => {\r\n\r\n    if (request.params.collectionName) {\r\n        collectionName = request.params.collectionName;\r\n    } else {\r\n        collectionName = 'cryptopunks';\r\n    }\r\n   \r\n\r\n    try {\r\n        const nftOptions = {method: 'GET'};\r\n\r\n        const response = await fetch( ( openseaUrlBase + `/${collectionName}`  ), nftOptions );\r\n\r\n        if (!response.ok) {\r\n            const message = `Bad response: ${response.status}`;\r\n            res.status(401).send(\"Could not find ticker symbol or other issue\");\r\n            throw new Error(message);\r\n        }\r\n        else {\r\n\r\n            const data = await response.json();\r\n\r\n            return new Response(JSON.stringify(data), {\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Access-Control-Allow-Origin': '*',\r\n                    'Access-Control-Allow-Methods': 'GET,HEAD,POST,OPTIONS',\r\n                    'Access-Control-Max-Age': '86400',\r\n                }\r\n            });\r\n        }\r\n    }\r\n    catch (error) {\r\n        console.error(\"Failed GET for Nft data: \" + error);\r\n        //res.status(401).send(\"Could not find ticker symbol or other issue\");\r\n    }\r\n};\r\nexport default NftTicker;","//PolygonAPI URL\r\nconst polygonUrlBase = 'https://api.polygon.io/v1/open-close/';\r\nlet symbol = 'AAPL';\r\nlet date = '2022-08-03';\r\nlet adjusted = 'true';\r\n\r\nconst Stockticker = async (request, event) => {\r\n\r\n    if (request.params.symbol) {\r\n        symbol = request.params.symbol;\r\n    } else {\r\n        symbol = 'AAPL';\r\n    }\r\n\r\n    if (request.params.date) {\r\n        date = request.params.date;\r\n    } else {\r\n        date = '2022-08-03';\r\n    }\r\n\r\n    if (request.params.adjusted) {\r\n        adjusted = request.params.adjusted;\r\n    } else {\r\n        adjusted = 'true';\r\n    }\r\n\r\n    try {\r\n        const response = await fetch((polygonUrlBase + `${symbol}/` + `${date}/` + `?adjusted=${adjusted}` + `&apiKey=${POLYGON_API_KEY}`));\r\n\r\n        if (!response.ok) {\r\n            const message = `Bad response: ${response.status}`;\r\n            res.status(401).send(\"Could not find ticker symbol or other issue\");\r\n            throw new Error(message);\r\n        }\r\n        else {\r\n\r\n            const data = await response.json();\r\n\r\n            return new Response(JSON.stringify(data), {\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Access-Control-Allow-Origin': '*',\r\n                    'Access-Control-Allow-Methods': 'GET,HEAD,POST,OPTIONS',\r\n                    'Access-Control-Max-Age': '86400',\r\n                }\r\n            });\r\n        }\r\n    }\r\n    catch (error) {\r\n        console.error(\"Failed GET for Polygon data: \" + error);\r\n        //res.status(401).send(\"Could not find ticker symbol or other issue\");\r\n    }\r\n};\r\nexport default Stockticker;","/* import { Configuration, OpenAIApi } from \"openai\";\r\n\r\nconst configuration = new Configuration({\r\n    apiKey: OPENAI_API_KEY,\r\n}); */\r\n//const openai = new OpenAIApi(configuration);\r\n\r\n//Open AI \r\nlet userPrompt = 'Chicken Nuggets';\r\n\r\nconst ApiTest = async (request, event) => {\r\n\r\n    //const userPrompt = request.params.userPrompt;\r\n\r\n    try {\r\n\r\n        /* if (request.params.userPrompt) {\r\n            userPrompt = request.params.userPrompt;\r\n        }  */\r\n\r\n\r\n\r\n\r\n        const completion = await openai.createCompletion({\r\n            model: \"text-davinci-002\",\r\n            prompt: userPrompt,\r\n        });\r\n\r\n        console.log(completion);\r\n\r\n        completion.catch(error => console.error('caught error!', error));\r\n\r\n        console.log(completion.data.choices[0].text);\r\n\r\n        //console.log(completion.data.choices[0].text);\r\n        return new Response(JSON.stringify(completion.data.choices[0].text), {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Access-Control-Allow-Origin': '*',\r\n                'Access-Control-Allow-Methods': 'GET,HEAD,POST,OPTIONS',\r\n                'Access-Control-Max-Age': '86400',\r\n            }\r\n        });\r\n\r\n    }\r\n    catch (error) {\r\n        console.error(\"Failed GET for openai data: \" + error);\r\n    }\r\n};\r\nexport default ApiTest;","//Spotify\r\nconst baseUrl = 'https://accounts.spotify.com/api/token';\r\nconst artistUrlBase = 'https://api.spotify.com/v1/artists/';\r\nlet artistID = '7bSpQNOg9UsW530DuXM3X5';\r\n\r\n\r\nconst Artist = async (request, event) => {\r\n\r\n    //const artistID = request.params.artistID;\r\n   \r\n    if (request.params.artistID) {\r\n        artistID = request.params.artistID;\r\n    } else {\r\n        artistID = '7bSpQNOg9UsW530DuXM3X5';\r\n    }\r\n\r\n    try {\r\n\r\n        const response = await fetch(baseUrl, {\r\n            method: 'POST',\r\n            body: 'grant_type=client_credentials&client_id=' + SPOTIFY_CLIENT_ID + '&client_secret=' + SPOTIFY_CLIENT_TOKEN,\r\n            headers: {\r\n                'Content-Type': 'application/x-www-form-urlencoded'\r\n            }\r\n        });\r\n        if (!response.ok) {\r\n            const message = `An error has occured: ${response.status}`;\r\n            throw new Error(message);\r\n        }\r\n        else {\r\n\r\n            //response.json() is a method on the Response object that lets you extract a JSON object from the response\r\n            const token = await response.json();\r\n\r\n            try {\r\n                const dataResponse = await fetch((artistUrlBase + artistID), {\r\n                    method: 'GET',\r\n                    headers: {\r\n                        'Authorization': `Bearer ${token.access_token}`,\r\n                        'Content-Type': 'application/json'\r\n                    }\r\n                });\r\n                if (!dataResponse.ok) {\r\n                    const message = `Could not get spotify data : ${dataResponse.status}`;\r\n                    throw new Error(message);\r\n                }\r\n                else {\r\n\r\n                    //response.json() is a method on the Response object that lets you extract a JSON object from the response\r\n                    const data = await dataResponse.json();\r\n\r\n                    return new Response(JSON.stringify(data), {\r\n                        headers: {\r\n                            'Content-Type': 'application/json',\r\n                            'Access-Control-Allow-Origin': '*',\r\n                            'Access-Control-Allow-Methods': 'GET,HEAD,POST,OPTIONS',\r\n                            'Access-Control-Max-Age': '86400',\r\n                        }\r\n                    });\r\n                }\r\n\r\n            }\r\n            catch (error) {\r\n                console.log(\"Error in getSpotifyAPI() data transfer : \" + error);\r\n            }\r\n        }\r\n    }\r\n    catch (error) {\r\n        console.error(\"Failed GET for Spotify data: \" + error);\r\n        //res.status(401).send(\"Could not find ticker symbol or other issue\");\r\n    }\r\n};\r\nexport default Artist;","//Spotify\r\nconst baseUrl = 'https://accounts.spotify.com/api/token';\r\nconst artistUrlBase = 'https://api.spotify.com/v1/artists/';\r\nlet artistID = '7bSpQNOg9UsW530DuXM3X5';\r\n\r\nconst Artists = async (request, event) => {\r\n\r\n\r\n    try {\r\n\r\n        const response = await fetch(baseUrl, {\r\n            method: 'POST',\r\n            body: 'grant_type=client_credentials&client_id=' + SPOTIFY_CLIENT_ID + '&client_secret=' + SPOTIFY_CLIENT_TOKEN,\r\n            headers: {\r\n                'Content-Type': 'application/x-www-form-urlencoded'\r\n            }\r\n        });\r\n        if (!response.ok) {\r\n            const message = `An error has occured: ${response.status}`;\r\n            throw new Error(message);\r\n        }\r\n        else {\r\n\r\n            //response.json() is a method on the Response object that lets you extract a JSON object from the response\r\n            const token = await response.json();\r\n\r\n            try {\r\n                const dataResponse = await fetch((artistUrlBase + artistID), {\r\n                    method: 'GET',\r\n                    headers: {\r\n                        'Authorization': `Bearer ${token.access_token}`,\r\n                        'Content-Type': 'application/json'\r\n                    }\r\n                });\r\n                if (!dataResponse.ok) {\r\n                    const message = `Could not get spotify data : ${dataResponse.status}`;\r\n                    throw new Error(message);\r\n                }\r\n                else {\r\n\r\n                    //response.json() is a method on the Response object that lets you extract a JSON object from the response\r\n                    const data = await dataResponse.json();\r\n\r\n                    return new Response(JSON.stringify(data), {\r\n                        headers: {\r\n                            'Content-Type': 'application/json',\r\n                            'Access-Control-Allow-Origin': '*',\r\n                            'Access-Control-Allow-Methods': 'GET,HEAD,POST,OPTIONS',\r\n                            'Access-Control-Max-Age': '86400',\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n            catch (error) {\r\n                console.log(\"Error in getSpotifyAPI() data transfer : \" + error);\r\n            }\r\n        }\r\n    }\r\n    catch (error) {\r\n        console.error(\"Failed GET for Spotify data: \" + error);\r\n        //res.status(401).send(\"Could not find ticker symbol or other issue\");\r\n    }\r\n};\r\nexport default Artists;","const testUrl = 'https://swapi.dev/api/people/';\r\n\r\nconst Test = async (request, event) => {\r\n\r\n    const swapid = request.params.id;\r\n\r\n    try {\r\n        const response = await fetch((testUrl + `${swapid}/`));\r\n\r\n        if (!response.ok) {\r\n            const message = `Bad response: ${response.status}`;\r\n            //res.status(401).send(\"Could not find ticker symbol or other issue\");\r\n            throw new Error(message);\r\n        }\r\n        else {\r\n\r\n            const data = await response.json();\r\n\r\n            //res.status(200).send(data);\r\n            return new Response(JSON.stringify(data), {\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Access-Control-Allow-Origin': '*',\r\n                    'Access-Control-Allow-Methods': 'GET,HEAD,POST,OPTIONS',\r\n                    'Access-Control-Max-Age': '86400',\r\n                }\r\n            });\r\n        }\r\n\r\n    }\r\n    catch (error) {\r\n        console.error(\"Failed GET for stock data: \" + error);\r\n        //res.status(401).send(\"Could not find ticker symbol or other issue\");\r\n    }\r\n\r\n};\r\n\r\nexport default Test;","const testUrl = 'https://swapi.dev/api/people/1/';\r\n\r\nconst Tests = async () => {\r\n    try {\r\n        const response = await fetch(testUrl);\r\n\r\n        if (!response.ok) {\r\n            const message = `Bad response: ${response.status}`;\r\n            //res.status(401).send(\"Could not find ticker symbol or other issue\");\r\n            throw new Error(message);\r\n        }\r\n        else {\r\n\r\n            const data = await response.json();\r\n\r\n            //res.status(200).send(data);\r\n            return new Response(JSON.stringify(data), {\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Access-Control-Allow-Origin': '*',\r\n                    'Access-Control-Allow-Methods': 'GET,HEAD,POST,OPTIONS',\r\n                    'Access-Control-Max-Age': '86400',\r\n                }\r\n            });\r\n        }\r\n\r\n    }\r\n    catch (error) {\r\n        console.error(\"Failed GET for stock data: \" + error);\r\n        //res.status(401).send(\"Could not find ticker symbol or other issue\");\r\n    }\r\n\r\n};\r\n\r\nexport default Tests;","// Module\nvar code = \"<!DOCTYPE html>\\r\\n<html lang=\\\"en\\\">\\r\\n\\r\\n<head>\\r\\n    <meta charset=\\\"UTF-8\\\">\\r\\n    <meta name=\\\"viewport\\\" content=\\\"width=device-width, initial-scale=1.0\\\">\\r\\n    <title>404</title>\\r\\n</head>\\r\\n\\r\\n<body>\\r\\n    <div style=\\\" width: 100%; height: 100%; background-color: #242a36; display: flexbox; flex-direction: column;\\\">\\r\\n\\r\\n        <div\\r\\n            style=\\\" padding:5px; width: 100%; height: 100%; background-color: #242a36; display: flexbox; flex-direction: column; border: 2px solid #19819Fff; text-align: center;\\\">\\r\\n\\r\\n            <nav\\r\\n                style=\\\" width: 100%; height: 100%; background-color: black; display: flex; align-self: center; align-items: center; flex-wrap: wrap; flex-direction: row; text-align: center;\\\">\\r\\n\\r\\n\\r\\n                <li style=\\\"flex-grow: 1; border: 3px solid 19819Fff;\\\"><a href=\\\"/About\\\"\\r\\n                        style=\\\"color: #025B79ff; font-weight:200; font-size:x-large; cursor: pointer; \\\">About</a></li>\\r\\n                <li style=\\\"flex-grow: 1; border: 3px solid 19819Fff; \\\"><a href=\\\"/Endpoints\\\"\\r\\n                        style=\\\"color: #025B79ff; font-weight:200; font-size:x-large; cursor: pointer;  \\\">Endpoints</a>\\r\\n                </li>\\r\\n                <li style=\\\"flex-grow: 1; border: 1px solid 19819Fff; \\\"><a href=\\\"/Contact\\\"\\r\\n                        style=\\\"color: #025B79ff; font-weight:200; font-size:x-large; cursor: pointer;  \\\">Contact</a>\\r\\n                </li>\\r\\n\\r\\n            </nav>\\r\\n\\r\\n            <h1 style=\\\"color:#AEBEBEff\\\"> GMA api 🔥</h1>\\r\\n            <h1 style=\\\"color:#AEBEBEff ; border-top: 1px solid white\\\"> About</h1>\\r\\n\\r\\n            <p style=\\\"color:#AEBEBEff\\\"> The GMAapi ( Gio M apps API ) was build with the purpose of\\r\\n                security, re-usability, and ease in mind. It is part of our project ecosystem and\\r\\n                was originally developed for FSD / GMA applications. We made the API available\\r\\n                publically as a proof of concept and ease of use. Anyone can call the\\r\\n                GMA API via HTTP requests to cloudflare. We have implemented WAF, rate-limiting,\\r\\n                standard practices, and other security measures to protect our own application\\r\\n                as well as 3rd party API's. This is what enables our API to be public\\r\\n                facing without Authorization. The API has various endpoints for features\\r\\n                of our current applications. We plan on adding more routes later.\\r\\n            </p>\\r\\n\\r\\n            <p style=\\\"color:#AEBEBEff\\\"> If you would like to fork or use our API\\r\\n                please give proper credit. You must also give credit to 3rd party\\r\\n                applications involved and respect their TOS.\\r\\n            </p>\\r\\n\\r\\n            <h3 style=\\\"color:#AEBEBEff\\\"> Built with Cloudflare workers </h3>\\r\\n            <a href=\\\"gmapps-api-v1.giomoscato.workers.dev\\\">gmapps-api-v1.giomoscato.workers.dev/</a>\\r\\n            <h3 style=\\\"color:#AEBEBEff; padding-bottom: 5px;\\\"> Source Code maintained on Gitub </h3>\\r\\n            <a\\r\\n                href=\\\"https://github.com/codingcodewhilegoofin/GMA-api-cloudflare\\\">https://github.com/codingcodewhilegoofin/GMA-api-cloudflare</a>\\r\\n\\r\\n            <h4 style=\\\"padding-top: 5px;color:#AEBEBEff; border-top: 1px solid white;\\\"> API used by </h4>\\r\\n\\r\\n            <div\\r\\n                style=\\\" padding-bottom: 5px; width: 100%; height: 100%; background-color: #242a36; display: flexbox; flex-direction: row;  text-align: center;\\\">\\r\\n\\r\\n\\r\\n                <a href=\\\"https://giomoscato.com/\\\"\\r\\n                    style=\\\" padding-left:5px; padding-right: 20px;border-left: 2px solid #787170ff; flex-grow: 1; border: 3px solid 19819Fff; color: #AEBEBEff\\\">\\r\\n                    giomoscato.com</a>\\r\\n\\r\\n                <a href=\\\"https://fullstackingdevelopment.com/\\\"\\r\\n                    style=\\\" padding-left:5px; border-left: 2px solid #EE0527ff; flex-grow: 1; border: 3px solid 19819Fff; color: #AEBEBEff\\\">\\r\\n                    fullstackingdevelopment.com</a>\\r\\n\\r\\n\\r\\n            </div>\\r\\n\\r\\n            <h4 style=\\\"padding-top: 5px;color:#AEBEBEff; border-top: 1px solid white;\\\"> Site preview </h4>\\r\\n\\r\\n            <div\\r\\n                style=\\\" padding-bottom: 5px; width: 100%; height: 100%; background-color: #242a36; display: flexbox; flex-direction: row;  text-align: center;\\\">\\r\\n\\r\\n\\r\\n                <a\\r\\n                    style=\\\" padding-bottom:5px; padding-left:5px; padding-right: 20px;border-left: 2px solid #787170ff; flex-grow: 1; border: 3px solid 19819Fff; color: #AEBEBEff\\\">\\r\\n                    giomoscato.com</a>\\r\\n\\r\\n                <iframe src=\\\"https://giomoscato.com/#/\\\" padding=\\\"auto\\\" width='100%' height=\\\"500\\\"\\r\\n                    allowtransparency=\\\"true\\\" frameborder=\\\"0\\\"\\r\\n                    sandbox=\\\"allow-popups allow-popups-to-escape-sandbox allow-same-origin allow-scripts\\\"></iframe>\\r\\n\\r\\n\\r\\n                <a href=\\\"/\\\">HOME</a>\\r\\n\\r\\n\\r\\n            </div>\\r\\n        </div>\\r\\n</body>\\r\\n\\r\\n</html>\";\n// Exports\nmodule.exports = code;","// Module\nvar code = \"<!DOCTYPE html>\\r\\n<html lang=\\\"en\\\">\\r\\n\\r\\n<head>\\r\\n    <meta charset=\\\"UTF-8\\\">\\r\\n    <meta name=\\\"viewport\\\" content=\\\"width=device-width, initial-scale=1.0\\\">\\r\\n    <title>404</title>\\r\\n</head>\\r\\n\\r\\n<body>\\r\\n    <div style=\\\" width: 100%; height: 100%; background-color: #242a36; display: flexbox; flex-direction: column;\\\">\\r\\n\\r\\n        <div\\r\\n            style=\\\" padding:5px; width: 100%; height: 100%; background-color: #242a36; display: flexbox; flex-direction: column; border: 2px solid #19819Fff; text-align: center;\\\">\\r\\n\\r\\n            <nav\\r\\n                style=\\\" width: 100%; height: 100%; background-color: black; display: flex; align-self: center; align-items: center; flex-wrap: wrap; flex-direction: row; text-align: center;\\\">\\r\\n\\r\\n\\r\\n                <li style=\\\"flex-grow: 1; border: 3px solid 19819Fff;\\\"><a href=\\\"/About\\\"\\r\\n                        style=\\\"color: #025B79ff; font-weight:200; font-size:x-large; cursor: pointer; \\\">About</a></li>\\r\\n                <li style=\\\"flex-grow: 1; border: 3px solid 19819Fff; \\\"><a href=\\\"/Endpoints\\\"\\r\\n                        style=\\\"color: #025B79ff; font-weight:200; font-size:x-large; cursor: pointer;  \\\">Endpoints</a>\\r\\n                </li>\\r\\n                <li style=\\\"flex-grow: 1; border: 1px solid 19819Fff; \\\"><a href=\\\"/Contact\\\"\\r\\n                        style=\\\"color: #025B79ff; font-weight:200; font-size:x-large; cursor: pointer;  \\\">Contact</a>\\r\\n                </li>\\r\\n\\r\\n            </nav>\\r\\n\\r\\n            <h1 style=\\\"color:#AEBEBEff\\\"> GMA api 🔥</h1>\\r\\n            <h1 style=\\\"color:#AEBEBEff ; border-top: 1px solid white\\\"> Contact</h1>\\r\\n\\r\\n            <div\\r\\n                style=\\\" padding-bottom: 5px; width: 100%; height: 100%; background-color: #242a36; display: flexbox; flex-direction: column;  text-align: center;\\\">\\r\\n\\r\\n                <a href=\\\"https://linktr.ee/_GMDev\\\" style=\\\"flex-grow: 1; color: green\\\"> https://linktr.ee/_GMDev</a>\\r\\n\\r\\n            </div>\\r\\n\\r\\n            <a href=\\\"/\\\" style=\\\"flex-grow: 1; color:#AEBEBEff\\\">HOME</a>\\r\\n\\r\\n        </div>\\r\\n    </div>\\r\\n</body>\\r\\n\\r\\n</html>\";\n// Exports\nmodule.exports = code;","// Module\nvar code = \"<!DOCTYPE html>\\r\\n<html lang=\\\"en\\\">\\r\\n\\r\\n<head>\\r\\n    <meta charset=\\\"UTF-8\\\">\\r\\n    <meta name=\\\"viewport\\\" content=\\\"width=device-width, initial-scale=1.0\\\">\\r\\n    <title>404</title>\\r\\n</head>\\r\\n\\r\\n<body>\\r\\n    <div style=\\\" width: 100%; height: 100%; background-color: #242a36; display: flexbox; flex-direction: column;\\\">\\r\\n\\r\\n        <div\\r\\n            style=\\\" padding:5px; width: 100%; height: 100%; background-color: #242a36; display: flexbox; flex-direction: column; border: 2px solid #19819Fff; text-align: center;\\\">\\r\\n\\r\\n            <nav\\r\\n                style=\\\" width: 100%; height: 100%; background-color: black; display: flex; align-self: center; align-items: center; flex-wrap: wrap; flex-direction: row; text-align: center;\\\">\\r\\n\\r\\n\\r\\n                <li style=\\\"flex-grow: 1; border: 3px solid 19819Fff;\\\"><a href=\\\"/About\\\"\\r\\n                        style=\\\"color: #025B79ff; font-weight:200; font-size:x-large; cursor: pointer; \\\">About</a></li>\\r\\n                <li style=\\\"flex-grow: 1; border: 3px solid 19819Fff; \\\"><a href=\\\"/Endpoints\\\"\\r\\n                        style=\\\"color: #025B79ff; font-weight:200; font-size:x-large; cursor: pointer;  \\\">Endpoints</a>\\r\\n                </li>\\r\\n                <li style=\\\"flex-grow: 1; border: 1px solid 19819Fff; \\\"><a href=\\\"/Contact\\\"\\r\\n                        style=\\\"color: #025B79ff; font-weight:200; font-size:x-large; cursor: pointer;  \\\">Contact</a>\\r\\n                </li>\\r\\n\\r\\n            </nav>\\r\\n\\r\\n            <h1 style=\\\"color:#AEBEBEff\\\"> GMA api 🔥</h1>\\r\\n            <h1 style=\\\"color:#AEBEBEff ; border-top: 1px solid white\\\"> Endpoints</h1>\\r\\n\\r\\n            <div style=\\\" padding-bottom: 5px; width: 100%; height: 100%; background-color: #242a36; display: flexbox; flex-direction: column;  text-align: center; align-self: center;\\\">\\r\\n\\r\\n            <label style=\\\"color:green;\\\" > HTTP GET GMA API STANDARD ROUTES </label>\\r\\n            <ul style=\\\"margin: 10px; background-color: #101730ff;  color:#AEBEBEff; align-self: center; text-align: center; list-style:square;\\\">\\r\\n\\r\\n                <label style=\\\"color:#AEBEBEff;\\\" > Home </label>\\r\\n                <li style=\\\"background-color: black; color:#AEBEBEff; padding-top: 5px; padding-bottom: 5px;\\\"> https://gmapps-api-v1.gmdev.workers.dev/</li>\\r\\n\\r\\n                <label style=\\\"color:#AEBEBEff;\\\" > About </label>\\r\\n                <li style=\\\"background-color: black; color:#AEBEBEff; padding-top: 5px; padding-bottom: 5px;\\\"> https://gmapps-api-v1.gmdev.workers.dev/About</li>\\r\\n\\r\\n                <label style=\\\"color:#AEBEBEff;\\\" > Endpoints </label>\\r\\n                <li style=\\\"background-color: black; color:#AEBEBEff; padding-top: 5px; padding-bottom: 5px;\\\"> https://gmapps-api-v1.gmdev.workers.dev/Endpoints</li>\\r\\n\\r\\n                <label style=\\\"color:#AEBEBEff;\\\" > Contact </label>\\r\\n                <li style=\\\"background-color: black; color:#AEBEBEff; padding-top: 5px; padding-bottom: 5px;\\\"> https://gmapps-api-v1.gmdev.workers.dev/Contact</li>\\r\\n            </ul>\\r\\n\\r\\n            <label style=\\\"color:green;\\\" > HTTP GET 3rd PARTY ROUTES </label>\\r\\n            <ul style=\\\"margin: 10px; background-color: #101730ff; color:#AEBEBEff; align-self: center; text-align: center; list-style:square;\\\">\\r\\n\\r\\n                <label style=\\\"color:#AEBEBEff;\\\" > Spotify </label>\\r\\n                <li style=\\\"background-color: black; padding-top: 5px; padding-bottom: 5px;\\\"> https://gmapps-api-v1.gmdev.workers.dev/api/Spotify</li>\\r\\n                <li style=\\\"background-color: black; padding-top: 5px; padding-bottom: 5px;\\\"> https://gmapps-api-v1.gmdev.workers.dev/api/Spotify/:artistID</li>\\r\\n\\r\\n                <label style=\\\"color:#AEBEBEff;\\\" > Arduino </label>\\r\\n                <li style=\\\"background-color: black; color:#AEBEBEff; padding-top: 5px; padding-bottom: 5px;\\\"> https://gmapps-api-v1.gmdev.workers.dev/api/Arduino/ToggleON</li>\\r\\n                <li style=\\\"background-color: black; color:#AEBEBEff; padding-top: 5px; padding-bottom: 5px;\\\"> https://gmapps-api-v1.gmdev.workers.dev/api/Arduino/ToggleOFF</li>\\r\\n                <li style=\\\"background-color: black; color:#AEBEBEff; padding-top: 5px; padding-bottom: 5px;\\\"> https://gmapps-api-v1.gmdev.workers.dev/api/Arduino/STATUS</li>\\r\\n\\r\\n                <label style=\\\"color:#AEBEBEff;\\\" > OpenAI </label>\\r\\n                <li style=\\\"background-color: black; color:#AEBEBEff; padding-top: 5px; padding-bottom: 5px;\\\"> https://gmapps-api-v1.gmdev.workers.dev/api/OpenAi/:userPrompt</li>\\r\\n\\r\\n                <label style=\\\"color:#AEBEBEff;\\\" > Financial API's </label>\\r\\n                <li style=\\\"background-color: black; color:#AEBEBEff; padding-top: 5px; padding-bottom: 5px;\\\"> https://gmapps-api-v1.gmdev.workers.dev/api/Stock/:symbol/:date/:adjusted</li>\\r\\n                <li style=\\\"background-color: black; color:#AEBEBEff; padding-top: 5px; padding-bottom: 5px;\\\"> https://gmapps-api-v1.gmdev.workers.dev/api/Crypto/:cryptoticker/:adjusted</li>\\r\\n                <li style=\\\"background-color: black; color:#AEBEBEff; padding-top: 5px; padding-bottom: 5px;\\\"> https://gmapps-api-v1.gmdev.workers.dev/api/Nft/:collectionName</li>\\r\\n                <li style=\\\"background-color: black; color:#AEBEBEff; padding-top: 5px; padding-bottom: 5px;\\\"> https://gmapps-api-v1.gmdev.workers.dev/api/Gov</li>\\r\\n            </ul>\\r\\n\\r\\n\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</body>\\r\\n\\r\\n</html>\";\n// Exports\nmodule.exports = code;","// Module\nvar code = \"<!DOCTYPE html>\\r\\n<html lang=\\\"en\\\">\\r\\n\\r\\n<head>\\r\\n    <meta charset=\\\"UTF-8\\\">\\r\\n    <meta name=\\\"viewport\\\" content=\\\"width=device-width, initial-scale=1.0\\\">\\r\\n    <title>GMAApi</title>\\r\\n</head>\\r\\n\\r\\n<body>\\r\\n    <div style=\\\" width: 100%; height: 100%; background-color: #242a36; display: flexbox; flex-direction: column;\\\">\\r\\n\\r\\n        <div\\r\\n            style=\\\" padding:5px; width: 100%; height: 100%; background-color: #242a36; display: flexbox; flex-direction: column; border: 2px solid #19819Fff; text-align: center;\\\">\\r\\n\\r\\n            <h1 style=\\\"color:#AEBEBEff\\\"> GMA api 🔥</h1>\\r\\n\\r\\n            <nav\\r\\n                style=\\\" width: 100%; height: 100%; background-color: black; display: flex; align-self: center; align-items: center; flex-wrap: wrap; flex-direction: row; text-align: center;\\\">\\r\\n\\r\\n\\r\\n                <li style=\\\"flex-grow: 1; border: 3px solid 19819Fff;\\\"><a href=\\\"/About\\\" style=\\\"color: #025B79ff; font-weight:200; font-size:x-large; cursor: pointer; \\\">About</a></li>\\r\\n                <li style=\\\"flex-grow: 1; border: 3px solid 19819Fff; \\\"><a href=\\\"/Endpoints\\\"  style=\\\"color: #025B79ff; font-weight:200; font-size:x-large; cursor: pointer;  \\\">Endpoints</a></li>\\r\\n                <li style=\\\"flex-grow: 1; border: 1px solid 19819Fff; \\\"><a href=\\\"/Contact\\\"  style=\\\"color: #025B79ff; font-weight:200; font-size:x-large; cursor: pointer;  \\\">Contact</a></li>\\r\\n\\r\\n            </nav>\\r\\n\\r\\n            <h3 style=\\\"color:#AEBEBEff\\\"> Built with Cloudflare workers </h3>\\r\\n            <a href=\\\"gmapps-api-v1.giomoscato.workers.dev\\\">gmapps-api-v1.giomoscato.workers.dev/</a>\\r\\n            <h3 style=\\\"color:#AEBEBEff; padding-bottom: 5px;\\\"> Source Code maintained on Gitub </h3>\\r\\n            <a href=\\\"https://github.com/codingcodewhilegoofin/GMA-api-cloudflare\\\">https://github.com/codingcodewhilegoofin/GMA-api-cloudflare</a>\\r\\n\\r\\n            <h4 style=\\\"padding-top: 5px;color:#AEBEBEff; border-top: 1px solid white;\\\"> API used by </h4>\\r\\n\\r\\n            <div style=\\\" padding-bottom: 5px; width: 100%; height: 100%; background-color: #242a36; display: flexbox; flex-direction: row;  text-align: center;\\\">\\r\\n\\r\\n\\r\\n            <a href=\\\"https://giomoscato.com/\\\" style=\\\" padding-left:5px; padding-right: 20px;border-left: 2px solid #787170ff; flex-grow: 1; border: 3px solid 19819Fff; color: #AEBEBEff\\\"> giomoscato.com</a>\\r\\n            \\r\\n            <a href=\\\"https://fullstackingdevelopment.com/\\\" style=\\\" padding-left:5px; border-left: 2px solid #EE0527ff; flex-grow: 1; border: 3px solid 19819Fff; color: #AEBEBEff\\\"> fullstackingdevelopment.com</a>\\r\\n            \\r\\n           \\r\\n            </div>\\r\\n\\r\\n            <h4 style=\\\"padding-top: 5px;color:#AEBEBEff; border-top: 1px solid white;\\\"> Contributors </h4>\\r\\n\\r\\n            <div style=\\\" padding-bottom: 5px; width: 100%; height: 100%; background-color: #242a36; display: flexbox; flex-direction: row;  text-align: center;\\\">\\r\\n\\r\\n\\r\\n            <a style=\\\" padding-bottom:5px; padding-left:5px; padding-right: 20px;border-left: 2px solid #787170ff; flex-grow: 1; border: 3px solid 19819Fff; color: #AEBEBEff\\\"> codingcodewhilegoofin</a>\\r\\n\\r\\n            <iframe src=\\\"https://coderstats.net/github/#codingcodewhilegoofin\\\" padding=\\\"auto\\\" width='100%' height=\\\"500\\\" allowtransparency=\\\"true\\\" frameborder=\\\"0\\\" sandbox=\\\"allow-popups allow-popups-to-escape-sandbox allow-same-origin allow-scripts\\\"></iframe>\\r\\n            \\r\\n           \\r\\n            \\r\\n           \\r\\n            </div>\\r\\n\\r\\n            \\r\\n\\r\\n        </div>\\r\\n\\r\\n\\r\\n    </div>\\r\\n</body>\\r\\n\\r\\n</html>\";\n// Exports\nmodule.exports = code;","import { Router } from 'itty-router';\nimport Tests from './handlers/tests.js';\nimport Test from './handlers/test.js';\nimport ApiTest from './handlers/OpenAi/apitest.js';\nimport Artist from './handlers/Spotify/artist.js';\nimport Artists from './handlers/Spotify/artists.js';\nimport StockTicker from './handlers/Financial/stock.js';\nimport CryptoTicker from './handlers/Financial/cryptoTicker.js';\nimport NftTicker from './handlers/Financial/nft.js';\nimport GovData from './handlers/Financial/gov.js';\nimport CodeLedToggleON from './handlers/Arduino/codeLedToggleON.js';\nimport CodeLedToggleOFF from './handlers/Arduino/codeLedToggleOFF.js';\nimport CodeLedSTATUS from './handlers/Arduino/codeLedSTATUS.js';\nimport MongoBackend from './handlers/Mongo/MongoBackend.js';\nimport Index from './html/index.html';\nimport About from './html/about.html';\nimport Endpoints from './html/endpoints.html';\nimport Contact from './html/contact.html';\n\nconst router = Router();\n\nrouter.get('/', () => new Response(Index , {\n  headers: { 'content-type': 'text/html' },\n})); \n\nrouter.get('/About', () => new Response(About , {\n  headers: { 'content-type': 'text/html' },\n})); \n\nrouter.get('/Endpoints', () => new Response(Endpoints , {\n  headers: { 'content-type': 'text/html' },\n})); \n\nrouter.get('/Contact', () => new Response(Contact , {\n  headers: { 'content-type': 'text/html' },\n})); \n\n// Test routes\nrouter.get('/api/tests', Tests)\nrouter.get('/api/test/:id', Test );\n\n// Connect to OpenAI API will need a standard HTTP request \nrouter.get('/api/OpenAi/:userPrompt', ApiTest );\n\n// Connect to Spotify API \nrouter.get('/api/Spotify', Artists );\nrouter.get('/api/Spotify/:artistID', Artist );\n\n// Connect to Financial APIs \nrouter.get('/api/Stock/:symbol/:date/:adjusted', StockTicker );\nrouter.get('/api/Crypto/:cryptoTicker/:adjusted', CryptoTicker );\nrouter.get('/api/Nft/:collectionName', NftTicker );\nrouter.get('/api/Gov', GovData );\n\n// Connect to Arduino API\nrouter.get('/api/Arduino/ToggleON', CodeLedToggleON );\nrouter.get('/api/Arduino/ToggleOFF', CodeLedToggleOFF );\nrouter.get('/api/Arduino/STATUS', CodeLedSTATUS );\n\nrouter.get('/api/Mongo', MongoBackend );\n\nrouter.get('*', () => new Response('🌴☀️ ~ Cannot find an endpoint for this 😕 ~ 🌴☀️', { status: 404 }));\n\n//Test listener\naddEventListener('fetch', event =>\n  event.respondWith(router.handle(event.request))\n)"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AClnGA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACxxHA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AC/CA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AC9BA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AC5CA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;ACrDA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACjDA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACxEA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AC/DA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACrCA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;AClCA;AACA;AACA;AACA;;;;;;;;;;;ACHA;AACA;AACA;AACA;;;;;;;;;;;ACHA;AACA;AACA;AACA;;;;;;;;;;;ACHA;AACA;AACA;AACA;;;;;;;;;;;;ACHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;A","sourceRoot":""}